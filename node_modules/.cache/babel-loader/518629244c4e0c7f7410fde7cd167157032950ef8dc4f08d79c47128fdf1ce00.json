{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M3philes\\\\Desktop\\\\brikola\\\\src\\\\pages\\\\connexion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Connexion() {\n  _s();\n  const [email, ChangeMail] = useState('');\n  const [passe, Changepasse] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  async function CheckButton(event) {\n    event.preventDefault();\n\n    //donnée a tester par l'api post\n    const donnee_a_verifier = {\n      email: email,\n      mot_de_passe: passe\n    };\n    let response = await fetch(\"http://localhost:7005/api/connexion_utilisateur\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(donnee_a_verifier)\n    });\n\n    // analyse si l'api répond\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    // stockage de la réponse\n    let result = await response.json();\n    if (result.role) {\n      localStorage.setItem('est_connecter', 'true');\n      localStorage.setItem('role_utilisateur', result.role);\n      localStorage.setItem('Id_Etudiant', result.Id_Etudiant);\n      localStorage.setItem('Id_Utilisateur', result.Id_Utilisateur);\n      window.location.href = \"/form1\";\n    } else if (result.role === 'invité') {\n      setErrorMessage('Mauvais mot de passe !');\n      console.log(result);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"email\",\n      children: \"E-Mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      value: email,\n      onChange: e => ChangeMail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"passe\",\n      children: \"Mot de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      id: \"passe\",\n      value: passe,\n      onChange: e => Changepasse(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: CheckButton,\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 13\n  }, this);\n}\n_s(Connexion, \"Qeq73m4YjUSzOoPrKwBWezt2xug=\");\n_c = Connexion;\nexport default Connexion;\nvar _c;\n$RefreshReg$(_c, \"Connexion\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Connexion","_s","email","ChangeMail","passe","Changepasse","errorMessage","setErrorMessage","CheckButton","event","preventDefault","donnee_a_verifier","mot_de_passe","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","role","localStorage","setItem","Id_Etudiant","Id_Utilisateur","window","location","href","console","log","children","for","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","e","target","className","onClick","_c","$RefreshReg$"],"sources":["C:/Users/M3philes/Desktop/brikola/src/pages/connexion.js"],"sourcesContent":["\r\nimport React, { useState } from 'react';\r\n\r\nfunction Connexion() {\r\n\r\n    const [email, ChangeMail] = useState('');\r\n    const [passe, Changepasse] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    async function CheckButton(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        //donnée a tester par l'api post\r\n        const donnee_a_verifier = { email: email, mot_de_passe: passe }\r\n\r\n        let response = await fetch(\"http://localhost:7005/api/connexion_utilisateur\",\r\n            {\r\n                method: 'POST',\r\n                headers:\r\n                {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(donnee_a_verifier)\r\n            });\r\n\r\n        // analyse si l'api répond\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        // stockage de la réponse\r\n        let result = await response.json();\r\n\r\n        if (result.role) {\r\n           \r\n            localStorage.setItem('est_connecter','true')\r\n            localStorage.setItem('role_utilisateur', result.role)\r\n            localStorage.setItem('Id_Etudiant', result.Id_Etudiant)\r\n            localStorage.setItem('Id_Utilisateur', result.Id_Utilisateur)\r\n            window.location.href = \"/form1\";\r\n\r\n\r\n        }\r\n        else if (result.role === 'invité') {\r\n            setErrorMessage('Mauvais mot de passe !');\r\n            console.log(result);\r\n\r\n\r\n        }\r\n    }\r\n\r\n        return (\r\n            <form>\r\n                <label for=\"email\">E-Mail</label>\r\n                <input type=\"email\" id=\"email\" value={email} onChange={(e) => ChangeMail(e.target.value)}>\r\n                </input>\r\n                <label for=\"passe\">Mot de passe</label>\r\n                {errorMessage && <h2 className=\"error-message\">{errorMessage}</h2>}\r\n                <input type=\"password\" id=\"passe\" value={passe} onChange={(e) => Changepasse(e.target.value)}>\r\n                </input>\r\n                <button onClick={CheckButton}>\r\n                    Valider\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n\r\n\r\n    export default Connexion;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}