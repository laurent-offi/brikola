{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M3philes\\\\Desktop\\\\brikola\\\\src\\\\pages\\\\register.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [username, ChangeUsername] = useState('');\n  const [email, ChangeEmail] = useState('');\n  const [password, ChangePassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [role, setRole] = useState('');\n  const [cities, setCity] = useState([]); // État pour stocker les villes\n  const [logged, setLogged] = useState(localStorage.getItem('logged_in') === 'true');\n  async function CheckButton(event) {\n    var _cities$find;\n    event.preventDefault();\n\n    //donnée a tester par l'api post\n    const data_verify = {\n      username: username,\n      email: email,\n      password: password,\n      city: city\n    };\n    let response = await fetch(\"http://localhost:7005/api/user_register\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data_verify)\n    });\n\n    // analyse si l'api répond\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    // stockage de la réponse\n    let result = await response.json();\n    if (cities.length === 0) {\n      console.error(\"Les données des villes ne sont pas encore disponibles.\");\n      return;\n    }\n    if (!selectedCity) {\n      console.error(\"Veuillez sélectionner une ville.\");\n      return;\n    }\n    const selectedCityId = (_cities$find = cities.find(city => city.city_name === selectedCity)) === null || _cities$find === void 0 ? void 0 : _cities$find.city_id;\n  }\n  useEffect(() => {\n    async function fetchCities() {\n      try {\n        const response = await fetch('http://localhost:7005/api/show_cities');\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const citiesData = await response.json();\n        setCities(citiesData);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchCities();\n  }, []);\n  if (!logged) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"login-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"box-container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            class: \"col\",\n            children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 46\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"username\",\n              children: \"Nom d'utilisateur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"username\",\n              id: \"username\",\n              value: username,\n              onChange: e => ChangeUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"email\",\n              children: \"E-Mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: email,\n              onChange: e => ChangeEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"password\",\n              children: \"Mot de passe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: e => ChangePassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"city\",\n              children: \"Ville\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"city\",\n              value: selectedCity,\n              onChange: e => setSelectedCity(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"S\\xE9lectionner une ville\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), cities.map(city => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: city.city_name,\n                children: city.city_name\n              }, city.city_id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: CheckButton,\n              children: \"S'inscrire\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vous \\xEAtes d\\xE9j\\xE0 connect\\xE9.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Register, \"rurb0aOm09ml/GIQwNlzigX7XM0=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Register","_s","username","ChangeUsername","email","ChangeEmail","password","ChangePassword","errorMessage","setErrorMessage","role","setRole","cities","setCity","logged","setLogged","localStorage","getItem","CheckButton","event","_cities$find","preventDefault","data_verify","city","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","length","console","error","selectedCity","selectedCityId","find","city_name","city_id","fetchCities","citiesData","setCities","class","children","className","fileName","_jsxFileName","lineNumber","columnNumber","for","type","id","value","onChange","e","target","htmlFor","setSelectedCity","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/M3philes/Desktop/brikola/src/pages/register.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction Register() {\r\n    const [username, ChangeUsername] = useState('');\r\n    const [email, ChangeEmail] = useState('');\r\n    const [password, ChangePassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [role, setRole] = useState('');\r\n    const [cities, setCity] = useState([]); // État pour stocker les villes\r\n    const [logged, setLogged] = useState(localStorage.getItem('logged_in') === 'true');\r\n\r\n    async function CheckButton(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        //donnée a tester par l'api post\r\n        const data_verify = { username: username, email: email, password: password, city: city }\r\n\r\n        let response = await fetch(\"http://localhost:7005/api/user_register\",\r\n            {\r\n                method: 'POST',\r\n                headers:\r\n                {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data_verify)\r\n            });\r\n\r\n        // analyse si l'api répond\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        // stockage de la réponse\r\n        let result = await response.json();\r\n\r\n        if (cities.length === 0) {\r\n            console.error(\"Les données des villes ne sont pas encore disponibles.\");\r\n            return;\r\n          }\r\n\r\n        if (!selectedCity) {\r\n            console.error(\"Veuillez sélectionner une ville.\");\r\n            return;\r\n        }\r\n        \r\n          const selectedCityId = cities.find(city => city.city_name === selectedCity)?.city_id;\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        async function fetchCities() {\r\n            try {\r\n                const response = await fetch('http://localhost:7005/api/show_cities');\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n                const citiesData = await response.json();\r\n                setCities(citiesData);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        }\r\n\r\n        fetchCities();\r\n    }, []);\r\n\r\n    if (!logged) {\r\n\r\n        return (\r\n            <div class=\"container\">\r\n\r\n                <div class=\"login-box\">\r\n\r\n                    <div class=\"box-container\">\r\n\r\n                        <form class=\"col\">\r\n                            {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n                            <label for=\"username\">Nom d'utilisateur</label>\r\n                            <input type=\"username\" id=\"username\" value={username} onChange={(e) => ChangeUsername(e.target.value)}></input>\r\n                            <label for=\"email\">E-Mail</label>\r\n                            <input type=\"email\" id=\"email\" value={email} onChange={(e) => ChangeEmail(e.target.value)}></input>\r\n                            <label for=\"password\">Mot de passe</label>\r\n                            <input type=\"password\" id=\"password\" value={password} onChange={(e) => ChangePassword(e.target.value)}></input>\r\n\r\n                            <label htmlFor=\"city\">Ville</label>\r\n                            <select id=\"city\" value={selectedCity} onChange={(e) => setSelectedCity(e.target.value)}>\r\n                                <option value=\"\">Sélectionner une ville</option>\r\n                                {cities.map(city => (\r\n                                    <option key={city.city_id} value={city.city_name}>{city.city_name}</option>\r\n                                ))}\r\n                            </select>\r\n\r\n                            <button onClick={CheckButton}>S'inscrire</button>\r\n                        </form>\r\n\r\n                    </div>\r\n\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n\r\n        return (\r\n            <div class=\"container\">\r\n\r\n                <h1>Vous êtes déjà connecté.</h1>\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}