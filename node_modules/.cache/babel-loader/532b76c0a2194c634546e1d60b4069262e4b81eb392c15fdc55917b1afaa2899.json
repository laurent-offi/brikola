{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\M3philes\\\\Desktop\\\\brikola\\\\src\\\\pages\\\\register.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Register() {\n  _s();\n  const [username, ChangeUsername] = useState('');\n  const [email, ChangeEmail] = useState('');\n  const [password, ChangePassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [role, setRole] = useState('');\n  const [logged, setLogged] = useState(localStorage.getItem('logged_in') === 'true');\n  async function CheckButton(event) {\n    event.preventDefault();\n\n    //donnée a tester par l'api post\n    const data_verify = {\n      username: username,\n      email: email,\n      password: password\n    };\n    let response = await fetch(\"http://localhost:7005/api/user_register\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data_verify)\n    });\n\n    // analyse si l'api répond\n    if (!response.ok) {\n      throw new Error('Network response was not ok');\n    }\n\n    // stockage de la réponse\n    let result = await response.json();\n  }\n  if (!logged) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"login-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"box-container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            class: \"col\",\n            children: [errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"error-message\",\n              children: errorMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"username\",\n              children: \"Nom d'utilisateur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"username\",\n              id: \"username\",\n              value: username,\n              onChange: e => ChangeUsername(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"email\",\n              children: \"E-Mail\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"email\",\n              id: \"email\",\n              value: email,\n              onChange: e => ChangeEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              for: \"password\",\n              children: \"Mot de passe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              id: \"password\",\n              value: password,\n              onChange: e => ChangePassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: CheckButton,\n              children: \"S'inscrire\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Vous \\xEAtes d\\xE9j\\xE0 connect\\xE9.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this);\n  }\n}\n_s(Register, \"Jx1a8C0COvtOJigpVv2fheTt5DY=\");\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Register","_s","username","ChangeUsername","email","ChangeEmail","password","ChangePassword","errorMessage","setErrorMessage","role","setRole","logged","setLogged","localStorage","getItem","CheckButton","event","preventDefault","data_verify","response","fetch","method","headers","body","JSON","stringify","ok","Error","result","json","class","children","className","fileName","_jsxFileName","lineNumber","columnNumber","for","type","id","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/M3philes/Desktop/brikola/src/pages/register.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction Register()\r\n{\r\n    const [username, ChangeUsername] = useState('');\r\n    const [email, ChangeEmail] = useState('');\r\n    const [password, ChangePassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [role, setRole] = useState('');\r\n    const [logged, setLogged] = useState(localStorage.getItem('logged_in') === 'true');\r\n\r\n    async function CheckButton(event) {\r\n\r\n        event.preventDefault();\r\n\r\n        //donnée a tester par l'api post\r\n        const data_verify = { username: username, email: email, password: password }\r\n\r\n        let response = await fetch(\"http://localhost:7005/api/user_register\",\r\n            {\r\n                method: 'POST',\r\n                headers:\r\n                {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify(data_verify)\r\n            });\r\n\r\n        // analyse si l'api répond\r\n        if (!response.ok) {\r\n            throw new Error('Network response was not ok');\r\n        }\r\n\r\n        // stockage de la réponse\r\n        let result = await response.json();\r\n    }\r\n\r\n    if (!logged) {\r\n    \r\n    return(\r\n        <div class=\"container\"> \r\n            \r\n            <div class=\"login-box\">\r\n\r\n                <div class=\"box-container\">\r\n\r\n                <form class=\"col\">\r\n                {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n\r\n                <label for=\"username\">Nom d'utilisateur</label>\r\n                <input type=\"username\" id=\"username\" value={username} onChange={(e) => ChangeUsername(e.target.value)}></input>\r\n                <label for=\"email\">E-Mail</label>\r\n                <input type=\"email\" id=\"email\" value={email} onChange={(e) => ChangeEmail(e.target.value)}></input>\r\n                <label for=\"password\">Mot de passe</label>\r\n                <input type=\"password\" id=\"password\" value={password} onChange={(e) => ChangePassword(e.target.value)}></input>\r\n                \r\n                <button onClick={CheckButton}>S'inscrire</button>\r\n                </form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n\r\n    } else {\r\n\r\n        return(\r\n            <div class=\"container\"> \r\n                \r\n               <h1>Vous êtes déjà connecté.</h1>\r\n    \r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default Register;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}